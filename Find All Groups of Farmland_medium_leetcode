class Solution:
    def findFarmland(self, land: List[List[int]]) -> List[List[int]]:
        def dfs(land, i, j):
            # out of bounday and visited
            if i < 0 or i >= len(land) or j < 0 or j >= len(land[0]) or land[i][j] != 1:
                return [-1, -1]

            # visited tag
            land[i][j] = 2

            [row_right, col_right] = dfs(land, i + 1, j)
            [row_down, col_down] = dfs(land, i, j + 1)

            return [max(row_right, row_down, i), max(col_right, col_down, j)]

        result = []

        for i in range(len(land)):
            for j in range(len(land[0])):
                if land[i][j] == 1:
                    [r, c] = dfs(land, i, j)
                    result.append([i, j, r, c])

        return result

class Solution:
    def findAllPeople(self, n: int, meetings: List[List[int]], firstPerson: int) -> List[int]:
        res = {0, firstPerson}
        times = defaultdict(list)

        for x,y, time in meetings:
            times[time].append((x,y))

        for time in sorted(times.keys()):
            bfs = deque()
            visited = set()
            graph = defaultdict(list)
            for x,y in times[time]:
                graph[x].append(y)
                graph[y].append(x)

                if x in res and x not in visited:
                    bfs.append(x)
                    visited.add(x)
                if y in res and y not in visited:
                    bfs.append(y)
                    visited.add(y)
            while bfs:
                node = bfs.popleft()
                for neighbor in graph[node]:
                    if neighbor not in visited:
                        visited.add(neighbor)
                        bfs.append(neighbor)
                        res.add(neighbor)
        return res
        

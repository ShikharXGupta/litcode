class Solution:
    def findCheapestPrice(self, n: int, flights: List[List[int]], src: int, dst: int, k: int) -> int:
        adj = [[] for _ in range(n)]
        output = [float("inf") for _ in range(n)]
        output[src] = 0

        for u,v,w in flights:
            adj[u].append((v,w))

        graph = deque()
        graph.append((src,-1,0))

        while graph:
            u,stop,cost = graph.popleft()
            if stop >= k: continue
            for v,w in adj[u]:
                if cost+w <output[v]:
                    output[v] =cost+w
                    graph.append((v, stop+1, cost+w))
        if output[dst] == float("inf"):
            return -1
        else:
            return output[dst]
